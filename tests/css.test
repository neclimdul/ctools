<?php
// $Id$
/**
 * @file
 * Tests for different parts of the ctools plugin system.
 */

/**
 * Test menu links depending on user permissions.
 */
class CtoolsCssTestCase extends DrupalWebTestCase {
  public static function getInfo() {
    return array(
      'name' => 'CSS Tools tests',
      'description' => '...',
      'group' => 'Chaos Tools Suite',
    );
  }

  function setUp() {
    // Additionally enable contact module.
    parent::setUp('ctools');
  }

  /**
   * Test that cached plugins are loaded correctly.
   */
  function testCssStuff() {
    $css = "#some-id .some-class {\n  color: black;\n  illegal-key: foo;\n}";
    $filtered_css = '#some-id .some-class{color:black;}';

    ctools_include('css');
    $filename1 = ctools_css_store('unfiltered-css-test', $css, FALSE);
    $filename2 = ctools_css_store('filtered-css-test', $css, TRUE);

    $this->assertEqual($filename1, ctools_css_retrieve('unfiltered-css-test'), 'Unfiltered css file successfully fetched');
    $file_contents = file_get_contents($filename1);
    $this->assertEqual($css, $file_contents, 'Unfiltered css file contents are correct');
//    $match = $filename1 == ctools_css_retrieve('unfiltered-css-test') ? 'Match' : 'No match';
//    $output .= '<pre>Unfiltered: ' . $filename1 . ' ' . $match . '</pre>';
//    $output .= '<pre>' . file_get_contents($filename1) . '</pre>';

    $this->assertEqual($filename2, ctools_css_retrieve('filtered-css-test'), 'Filtered css file succcesfully fetched');
    $file_contents = file_get_contents($filename2);
    $this->assertEqual($filtered_css, $file_contents, 'Filtered css file contents are correct');
    //    $match = $filename2 == ctools_css_retrieve('filtered-css-test') ? 'Match' : 'No match';
//    $output .= '<pre>Filtered: ' . $filename2 . ' ' . $match . '</pre>';
//    $output .= '<pre>' . file_get_contents($filename2) . '</pre>';
//
//    drupal_add_css($filename2, array('type' => 'file'));
//    return array('#markup' => $output);
  }
}
