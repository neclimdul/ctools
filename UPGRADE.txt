Upgrading from ctools-6.x-1.x to ctools-7.x-2.x:

  - $skip_cache parameter of ctools_object_cache_get removed in favor of
    calls to drupal_static_reset();
  - All calls to the ctools_ajax_command_prepend() should be replace with 
    the core function ajax_command_prepend();

    This is also the case for append, insert, after, before, replace, html, 
    and remove commands. 

    Each of these commands have been incorporated into the 

    Drupal.ajax.prototype.commands.insert 
    
    function with a corresponding parameter specifying which method to use.

  - All calls to ctools_ajax_render() should be replaced with calls to core
    ajax_render(). Note that ctools_ajax_render() printed the json object and
    exited, ajax_render() gives you this responsibility. 

    ctools_ajax_render() 

    becomes

    print ajax_render();
    exit;

  - All calls to ctools_static*() should be replaced with corresponding calls
    to drupal_static*().
  - All calls to ctools_css_add_css should be replaced with calls to
    drupal_add_css(). Note that the arguments to drupal_add_css() have changed.
  - All wizard form builder functions must now return a form array().
  - ctools_build_form is very close to being removed.  In anticipation of this, 
    all $form_state['wrapper callback']s must now be 
    $form_state['wrapper_callback']. In addition to this $form_state['args'] 
    must now be $form_state['build_info']['args'].
  - Plugin types now must be explicitly registered via a registration hook,
    hook_ctools_plugin_type(); info once provided in magically-named functions
    (e.g., ctools_ctools_plugin_content_types() was the old function to
    provide plugin type info for ctools' content_type plugins) now must be
    provided in that global hook. See http://drupal.org/node/910538 for more
    details.
  - Plugins that use 'theme arguments' now use 'theme variables' instead.
